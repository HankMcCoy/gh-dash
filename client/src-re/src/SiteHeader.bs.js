// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

var List                   = require("bs-platform/lib/js/list.js");
var Block                  = require("bs-platform/lib/js/block.js");
var Curry                  = require("bs-platform/lib/js/curry.js");
var React                  = require("react");
var Glamor                 = require("bs-glamor/src/glamor.js");
var ReasonReact            = require("reason-react/src/ReasonReact.js");
var Util$ReactTemplate     = require("./Util.bs.js");
var Spacer$ReactTemplate   = require("./Spacer.bs.js");
var OrgData$ReactTemplate  = require("./OrgData.bs.js");
var RepoData$ReactTemplate = require("./RepoData.bs.js");

function str(prim) {
  return prim;
}

var component = ReasonReact.reducerComponent("SiteHeader");

var root = Glamor.css(/* :: */[
      Glamor.display("flex"),
      /* :: */[
        Glamor.backgroundColor("#F2F2F2"),
        /* :: */[
          Glamor.border("1px solid #ddd"),
          /* :: */[
            Glamor.height("50px"),
            /* :: */[
              Glamor.alignItems("center"),
              /* :: */[
                Glamor.padding("0 20px"),
                /* [] */0
              ]
            ]
          ]
        ]
      ]
    ]);

var label = Glamor.css(/* :: */[
      Glamor.display("flex"),
      /* [] */0
    ]);

var Styles = /* module */[
  /* root */root,
  /* label */label
];

function make() {
  var newrecord = component.slice();
  newrecord[/* didMount */4] = (function (self) {
      OrgData$ReactTemplate.fetchAll(/* () */0).then((function (orgs) {
              Curry._1(self[/* send */4], /* LoadOrgs */Block.__(0, [orgs]));
              return Promise.resolve(/* () */0);
            }));
      RepoData$ReactTemplate.fetchAll(/* () */0).then((function (repos) {
              Curry._1(self[/* send */4], /* LoadRepos */Block.__(1, [repos]));
              return Promise.resolve(/* () */0);
            }));
      return /* NoUpdate */0;
    });
  newrecord[/* render */9] = (function (param) {
      var state = param[/* state */2];
      return React.createElement("div", {
                  className: root
                }, React.createElement("label", {
                      className: label
                    }, "Org", ReasonReact.element(/* None */0, /* None */0, Spacer$ReactTemplate.make(/* Some */["5px"], /* None */0, /* array */[])), React.createElement("select", undefined, React.createElement("option", undefined), Util$ReactTemplate.listToElement(List.map((function (org) {
                                    return React.createElement("option", undefined, org);
                                  }), state[/* orgs */0])))), ReasonReact.element(/* None */0, /* None */0, Spacer$ReactTemplate.make(/* Some */["10px"], /* None */0, /* array */[])), React.createElement("label", {
                      className: label
                    }, "Repo", ReasonReact.element(/* None */0, /* None */0, Spacer$ReactTemplate.make(/* Some */["5px"], /* None */0, /* array */[])), React.createElement("select", undefined, React.createElement("option", undefined), Util$ReactTemplate.listToElement(List.map((function (repo) {
                                    return React.createElement("option", undefined, repo);
                                  }), state[/* repos */1])))), ReasonReact.element(/* None */0, /* None */0, Spacer$ReactTemplate.make(/* Some */["10px"], /* None */0, /* array */[])), React.createElement("label", {
                      className: label
                    }, "Time-span", ReasonReact.element(/* None */0, /* None */0, Spacer$ReactTemplate.make(/* Some */["5px"], /* None */0, /* array */[])), React.createElement("select", undefined, React.createElement("option", undefined), React.createElement("option", undefined, "1 week"), React.createElement("option", undefined, "2 week"), React.createElement("option", undefined, "4 week"), React.createElement("option", undefined, "8 week"), React.createElement("option", undefined, "16 week"))));
    });
  newrecord[/* initialState */10] = (function () {
      return /* record */[
              /* orgs : [] */0,
              /* repos : [] */0
            ];
    });
  newrecord[/* reducer */12] = (function (action, state) {
      if (action.tag) {
        return /* Update */Block.__(0, [/* record */[
                    /* orgs */state[/* orgs */0],
                    /* repos */action[0]
                  ]]);
      } else {
        return /* Update */Block.__(0, [/* record */[
                    /* orgs */action[0],
                    /* repos */state[/* repos */1]
                  ]]);
      }
    });
  return newrecord;
}

exports.str       = str;
exports.component = component;
exports.Styles    = Styles;
exports.make      = make;
/* component Not a pure module */
